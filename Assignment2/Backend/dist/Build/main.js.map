{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/workout/workout.component.ts","./src/app/workout/workout.component.html","./src/app/details/details.component.ts","./src/app/details/details.component.html","./src/environments/environment.ts","./src/app/addprogram/addprogram.component.ts","./src/app/addprogram/addprogram.component.html","./src/app/auth/auth.guard.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/auth/auth-intercepter.ts","./src/app/app.module.ts","./src/app/shared/models/Workout.ts","./src/app/add-workout/add-workout.component.ts","./src/app/add-workout/add-workout.component.html","./src/app/shared/models/WorkoutProgram.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/auth/auth-service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\n\r\nimport { User, AuthenticationService } from '../auth/auth-service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss'],\r\n})\r\n\r\n\r\nexport class RegisterComponent implements OnInit {\r\n  hide = true;\r\n  loginFormModel: FormGroup;\r\n\r\n\r\n  constructor(private authService: AuthenticationService) {\r\n\r\n    this.loginFormModel = new FormGroup({\r\n      username: new FormControl(''),\r\n      password: new FormControl(''),\r\n      confirmPassword: new FormControl(''),\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const user: User = {\r\n      username: this.loginFormModel.value.username,\r\n      password: this.loginFormModel.value.password,\r\n      confirmPassword: this.loginFormModel.value.confirmPassword\r\n    };\r\n    if (user.password !== user.confirmPassword) { return; }\r\n    this.authService.register(user);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"register\">\r\n        <h1>Register new user!</h1>\r\n        <form [formGroup]=\"loginFormModel\" (ngSubmit)=\"onSubmit()\">\r\n            <mat-form-field appearance=\"outline\" hintLabel=\"Min 5 characters\">\r\n                <mat-label>Username</mat-label>\r\n                <input minlength=\"5\" #username placeholder=\"John Doe\" matInput formControlName=\"username\">\r\n                <mat-hint align=\"end\">{{username.value?.length || 0}}/5</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"outline\" hintLabel=\"Min 8 characters\">\r\n                <mat-label>Password</mat-label>\r\n                <input matInput minlength=\"8\" formControlName=\"password\" #password [type]=\"hide ? 'password' : 'text'\">\r\n                <button mat-icon-button matSuffix type=\"button\" (click)=\"hide = !hide\">\r\n                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                </button>\r\n                <mat-hint align=\"end\">{{password.value?.length || 0}}/8</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Confirm Password</mat-label>\r\n                <input matInput minlength=\"8\" formControlName=\"confirmPassword\" #confirmPassword [type]=\"hide ? 'password' : 'text'\">\r\n                <button mat-icon-button matSuffix type=\"button\" (click)=\"hide = !hide\">\r\n                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n            <button mat-fab>\r\n                <mat-icon>person_add</mat-icon>\r\n            </button>\r\n        </form>\r\n\r\n\r\n\r\n    </div>\r\n</div>","import {Component, OnInit} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport WorkoutProgram from '../shared/models/WorkoutProgram';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-workout',\r\n  templateUrl: './workout.component.html',\r\n  styleUrls: ['./workout.component.scss']\r\n})\r\nexport class WorkoutComponent implements OnInit {\r\n\r\n  programs: WorkoutProgram[] = [];\r\n\r\n  constructor(private http: HttpClient,\r\n              private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.http.get<ProgramApi>('/api/programs').subscribe((s) => this.programs = s.workoutPrograms);\r\n  }\r\n\r\n  details(id: string): void {\r\n    this.router.navigateByUrl('/programs/' + id);\r\n  }\r\n\r\n  addWorkout(id: string): void {\r\n    this.router.navigateByUrl('/addWorkout/' + id);\r\n  }\r\n}\r\n\r\ninterface ProgramApi {\r\n  workoutPrograms: WorkoutProgram[];\r\n}\r\n","<div class=\"header\">\r\n  <h1 class=\"\">Homepage - Workout List</h1>\r\n  <button mat-raised-button color=\"primary\" routerLink=\"/addprogram\">Add Workout Program</button>\r\n</div>\r\n\r\n<div class=\"test-container\">\r\n\r\n  <mat-card *ngFor=\"let program of programs\" class=\"workoutcard-container\">\r\n    <h2>{{program.name}}</h2>\r\n    <hr class=\"hr\">\r\n    <p class=\"exercise-title\">First exercise</p>\r\n    <ul *ngIf=\"program.workouts[0]\">\r\n      <li><p>Name: {{program.workouts[0].exercise}}</p></li>\r\n      <li><p>Description: {{program.workouts[0].description}}</p></li>\r\n      <li><p>Sets: {{program.workouts[0].set}}</p></li>\r\n      <li><p>Reps Or Time: {{program.workouts[0].repsOrTime}}</p></li>\r\n    </ul>\r\n    <div>\r\n      <button mat-raised-button color=\"primary\" (click)=\"details(program._id)\">Show details</button>\r\n      <button mat-raised-button color=\"primary\" *ngIf=\"!program.isPublic\" (click)=\"addWorkout(program._id)\">Add workout to program</button>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {ActivatedRoute, Route, Router} from '@angular/router';\r\nimport WorkoutProgram from '../shared/models/WorkoutProgram';\r\n\r\n@Component({\r\n  selector: 'app-details',\r\n  templateUrl: './details.component.html',\r\n  styleUrls: ['./details.component.scss']\r\n})\r\nexport class DetailsComponent implements OnInit {\r\n\r\n  private programId: string | null = '';\r\n  public program: WorkoutProgram | undefined;\r\n\r\n  constructor(private http: HttpClient,\r\n              private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.programId = this.route.snapshot.paramMap.get('programId');\r\n    this.http.get<ProgramApi>('/api/programs/' + this.programId).subscribe((s) => this.program = s.workoutProgram);\r\n  }\r\n\r\n}\r\n\r\ninterface ProgramApi {\r\n  workoutProgram: WorkoutProgram;\r\n}\r\n","<div class=\"basic-container\">\r\n\r\n  <mat-card class=\"workoutcard-container\" *ngIf=\"program\">\r\n    <h2>{{program.name}}</h2>\r\n    <div *ngFor=\"let workout of program.workouts\">\r\n      <hr class=\"hr\">\r\n      <p>Name: {{workout.exercise}}</p>\r\n      <ul>\r\n        <li><p>Description: {{workout.description}}</p></li>\r\n        <li><p>Sets: {{workout.set}}</p></li>\r\n        <li><p>Reps Or Time: {{workout.repsOrTime}}</p></li>\r\n      </ul>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import {Component, HostListener, OnInit} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport WorkoutProgram from '../shared/models/WorkoutProgram';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-addprogram',\r\n  templateUrl: './addprogram.component.html',\r\n  styleUrls: ['./addprogram.component.scss']\r\n})\r\nexport class AddprogramComponent implements OnInit {\r\n\r\n  value = '';\r\n\r\n  constructor(private route: Router,\r\n              private http: HttpClient) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public submit(): void {\r\n    const program123 = new WorkoutProgram(this.value, [], '');\r\n    this.http.post('/api/programs', {program: program123}).subscribe((s) => this.route.navigateByUrl(''));\r\n  }\r\n\r\n}\r\n","<div class=\"header\">\r\n  <h1>Add Program</h1>\r\n</div>\r\n\r\n<div class=\"basic-container\">\r\n  <mat-card class=\"workoutcard-container\">You can Add a new Program here\r\n    <br>\r\n    <br>\r\n\r\n    <mat-form-field class=\"example-form-field\">\r\n      <mat-label>Program name</mat-label>\r\n      <input matInput type=\"text\" [(ngModel)]=\"value\">\r\n      <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n    <br>\r\n    <br>\r\n    <button mat-raised-button color=\"primary\" (click)=\"submit()\">Submit</button>\r\n  </mat-card>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationService } from './auth-service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthenticationService, private router: Router) { }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    const url = state.url;\r\n    if (this.authService.isLoggedIn()) { return true; }\r\n    // Store the attempted URL for redirecting\r\n    this.authService.redirectUrl = url;\r\n    // Navigate to the login page\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport {AuthenticationService} from './auth/auth-service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor(private auth: AuthenticationService) { }\r\n\r\n  title = 'Frontend';\r\n\r\n  signOut() {\r\n    this.auth.SignOut();\r\n  }\r\n}\r\n","<div class=\"title-container\">\r\n    <a href=\"/\">BALLZFITNESS</a>\r\n    <div class=\"sign-in-out\"><button mat-raised-button color=\"warn\" (click)=\"signOut()\">LogOut</button>\r\n    </div>\r\n    <div class=\"sign-in-out\"><button mat-raised-button color=\"primary\" routerLink=\"/login\">LogIn</button></div>\r\n    <div class=\"sign-in-out\"><button mat-raised-button color=\"primary\" routerLink=\"\">Home</button></div>\r\n</div>\r\n<router-outlet></router-outlet>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { AuthenticationService } from './auth-service';\r\n\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private auth: AuthenticationService) { }\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // Clone the request to add the new header.\r\n      if (this.auth.getToken()) {\r\n        const authReq = req.clone({ headers: req.headers.set('Authorization', 'Bearer ' + this.auth.getToken()) });\r\n        // Pass on the cloned request instead of the original request.\r\n        return next.handle(authReq);\r\n      } else {\r\n        return next.handle(req);\r\n      }\r\n    }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NgMaterialIconModule } from 'ng-material-icon';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AddprogramComponent } from './addprogram/addprogram.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { WorkoutComponent } from './workout/workout.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n\r\nimport { AuthInterceptor } from './auth/auth-intercepter';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\r\nimport { DetailsComponent } from './details/details.component';\r\nimport { AddWorkoutComponent } from './add-workout/add-workout.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    AddprogramComponent,\r\n    WorkoutComponent,\r\n    RegisterComponent,\r\n    DetailsComponent,\r\n    AddWorkoutComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgMaterialIconModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n\r\n    HttpClientModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n  ],\r\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","\r\nexport default class Workout {\r\n  // tslint:disable-next-line:variable-name\r\n  constructor(public exercise: string, public description: string, public set: number, public repsOrTime: string, public _id: string | undefined) {\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport WorkoutProgram from '../shared/models/WorkoutProgram';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport Workout from '../shared/models/Workout';\r\n\r\n@Component({\r\n  selector: 'app-add-workout',\r\n  templateUrl: './add-workout.component.html',\r\n  styleUrls: ['./add-workout.component.scss']\r\n})\r\nexport class AddWorkoutComponent implements OnInit {\r\n  private programId: string | null = '';\r\n  public program: WorkoutProgram | undefined;\r\n  exercise = '';\r\n  description = '';\r\n  set: number | undefined;\r\n  repsOrTime = '';\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              private http: HttpClient) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.programId = this.route.snapshot.paramMap.get('programId');\r\n    this.http.get<ProgramApi>('/api/programs/' + this.programId).subscribe((s) => {\r\n      if (s.workoutProgram.isPublic) {\r\n        this.router.navigateByUrl('');\r\n      }\r\n      this.program = s.workoutProgram;\r\n    });\r\n  }\r\n\r\n  submit(): void {\r\n    const workout = new Workout(this.exercise, this.description, this.set || 0, this.repsOrTime, '');\r\n    workout._id = undefined;\r\n    this.program?.workouts.push(workout);\r\n    this.http.put('/api/programs/' + this.programId, {program: this.program}).subscribe(\r\n      (s) => this.router.navigateByUrl(''),\r\n      (err) => this.router.navigateByUrl(''));\r\n  }\r\n\r\n}\r\n\r\ninterface ProgramApi {\r\n  workoutProgram: WorkoutProgram;\r\n}\r\n","<div class=\"header\" *ngIf=\"program\">\r\n  <h1>Add Workout to {{program.name}}</h1>\r\n</div>\r\n\r\n<div class=\"basic-container\" *ngIf=\"program\">\r\n  <mat-card class=\"workoutcard-container\">You can Add a new workout to your program here\r\n    <br>\r\n    <br>\r\n    <p>\r\n      <mat-form-field class=\"example-form-field\">\r\n        <mat-label>Exercise</mat-label>\r\n        <input matInput type=\"text\" [(ngModel)]=\"exercise\">\r\n        <button mat-button *ngIf=\"exercise\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"exercise=''\">\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n    </p>\r\n    <p>\r\n      <mat-form-field class=\"example-form-field\">\r\n        <mat-label>Description</mat-label>\r\n        <input matInput type=\"text\" [(ngModel)]=\"description\">\r\n        <button mat-button *ngIf=\"description\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"description=''\">\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n    </p>\r\n    <p>\r\n      <mat-form-field class=\"example-form-field\">\r\n        <mat-label>Sets</mat-label>\r\n        <input matInput type=\"text\" [(ngModel)]=\"set\">\r\n        <button mat-button *ngIf=\"set\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"set=undefined\">\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n    </p>\r\n    <p>\r\n      <mat-form-field class=\"example-form-field\">\r\n        <mat-label>Reps or Time</mat-label>\r\n        <input matInput type=\"text\" [(ngModel)]=\"repsOrTime\">\r\n        <button mat-button *ngIf=\"repsOrTime\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"repsOrTime=''\">\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n    </p>\r\n    <br>\r\n    <br>\r\n    <button mat-raised-button color=\"primary\" (click)=\"submit()\">Submit</button>\r\n  </mat-card>\r\n</div>\r\n","import Workout from './Workout';\r\n\r\nexport default class WorkoutProgram {\r\n  // tslint:disable-next-line:variable-name\r\n  constructor(public name: string, public workouts: Workout[], public _id: string, public isPublic?: boolean) {\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AddprogramComponent } from './addprogram/addprogram.component';\r\nimport { WorkoutComponent } from './workout/workout.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { DetailsComponent } from './details/details.component';\r\nimport { AddWorkoutComponent } from './add-workout/add-workout.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'addworkout', component: WorkoutComponent, canActivate: [AuthGuard] },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'registration', component: RegisterComponent },\r\n  { path: 'addprogram', component: AddprogramComponent, canActivate: [AuthGuard] },\r\n  { path: 'programs/:programId', component: DetailsComponent, canActivate: [AuthGuard] },\r\n  { path: 'addWorkout/:programId', component: AddWorkoutComponent, canActivate: [AuthGuard] },\r\n  { path: '', component: WorkoutComponent, pathMatch: 'full' },\r\n  { path: '**', redirectTo: '' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule {\r\n\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\n\r\nimport {User, AuthenticationService} from '../auth/auth-service';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\n\r\n\r\nexport class LoginComponent implements OnInit {\r\n  hide = true;\r\n  loginFormModel: FormGroup;\r\n\r\n  constructor(private authService: AuthenticationService,\r\n              private router: Router) {\r\n\r\n    this.loginFormModel = new FormGroup({\r\n      username: new FormControl(''),\r\n      password: new FormControl(''),\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const user: User = {username: this.loginFormModel.value.username, password: this.loginFormModel.value.password};\r\n    this.authService.SignIn(user);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"login\">\r\n        <h1>login!</h1>\r\n        <form [formGroup]=\"loginFormModel\" (ngSubmit)=\"onSubmit()\">\r\n            <mat-form-field appearance=\"outline\" hintLabel=\"Min 5 characters\">\r\n                <mat-label>Username</mat-label>\r\n                <input minlength=\"5\" #username placeholder=\"John Doe\" matInput formControlName=\"username\">\r\n                <mat-hint align=\"end\">{{username.value?.length || 0}}/5</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"outline\" hintLabel=\"Min 8 characters\">\r\n                <mat-label>Password</mat-label>\r\n                <input matInput minlength=\"8\" formControlName=\"password\" #password [type]=\"hide ? 'password' : 'text'\">\r\n                <button mat-icon-button matSuffix type=\"button\" (click)=\"hide = !hide\">\r\n                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                </button>\r\n                <mat-hint align=\"end\">{{password.value?.length || 0}}/8</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n            <button mat-fab>\r\n                <mat-icon>lock_open</mat-icon>\r\n            </button>\r\n        </form>\r\n\r\n\r\n        Not an user? Sign op <a routerLink=\"/registration\">here</a>\r\n\r\n\r\n    </div>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\n\r\nexport interface User {\r\n    username: string;\r\n    password: string;\r\n    confirmPassword?: string;\r\n}\r\n\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AuthenticationService {\r\n\r\n    constructor(private http: HttpClient,\r\n                private router: Router) { }\r\n\r\n    apiBaseUrl = '/api/';\r\n    redirectUrl = '';\r\n\r\n\r\n\r\n    getToken = () => {\r\n        if (window.localStorage['loc8r-token']) {\r\n            return window.localStorage['loc8r-token'];\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n\r\n    get httpOptions(): HttpHeaders {\r\n        return new HttpHeaders({\r\n            'Access-Control-Allow-Origin': '*',\r\n        }).set('Authorization', 'Bearer ' +\r\n            this.getToken());\r\n    }\r\n\r\n\r\n    SignIn = (user: User) => {\r\n        const url = `${this.apiBaseUrl}auth/login`;\r\n        this.http.post<AuthToken>(url, user, {headers: this.httpOptions}).subscribe(data => {\r\n            this.saveToken(data.token);\r\n            this.router.navigateByUrl('');\r\n            return true;\r\n        },\r\n            // Errors will call this callback instead:\r\n            (err: HttpErrorResponse) => {\r\n                if (err.error instanceof Error) {\r\n                    // A client-side or network error occurred. Handle it accordingly.\r\n                    console.log('An error occurred:', err.error.message);\r\n                } else {\r\n                    // The backend returned an unsuccessful response code.\r\n                    // The response body may contain clues as to what went wrong,\r\n                    console.log(`Backend returned code ${err.status}, body was: ${err.error}`);\r\n                }\r\n                return false;\r\n            });\r\n    }\r\n\r\n    public register(user: User): void {\r\n        const url = `${this.apiBaseUrl}auth/registration`;\r\n        this.http.post<AuthToken>(url, user, {headers: this.httpOptions}).subscribe(data => {\r\n            this.saveToken(data.token);\r\n            return true;\r\n        },\r\n            // Errors will call this callback instead:\r\n            (err: HttpErrorResponse) => {\r\n                if (err.error instanceof Error) {\r\n                    // A client-side or network error occurred. Handle it accordingly.\r\n                    console.log('An error occurred:', err.error.message);\r\n                } else {\r\n                    // The backend returned an unsuccessful response code.\r\n                    // The response body may contain clues as to what went wrong,\r\n                    console.log(`Backend returned code ${err.status}, body was: ${err.error}`);\r\n                }\r\n                return false;\r\n            });\r\n    }\r\n\r\n    SignOut = () => {\r\n        window.localStorage.removeItem('loc8r-token');\r\n        window.location.reload();\r\n    }\r\n\r\n    saveToken = (token: string) => {\r\n        window.localStorage['loc8r-token'] = token;\r\n    }\r\n\r\n\r\n    isLoggedIn = () => {\r\n        const token = this.getToken();\r\n        if (token) {\r\n            const payload = JSON.parse(window.atob(token.split('.')[1]));\r\n            return payload.exp > Date.now() / 1000;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\ninterface AuthToken {\r\n  token: string;\r\n}\r\n"],"sourceRoot":"webpack:///"}