{"version":3,"sources":["constants.ts","utils/random-generator.ts","state/game-round/actions.ts","state/game-round/constants.ts","state/game/actions.ts","state/game/constants.ts","state/game/operations.ts","state/highscore/actions.ts","state/highscore/constants.ts","state/highscore/operations.ts","utils/rounds.ts","components/dual-back-grid-item.tsx","components/dual-back-grid.tsx","components/dual-n-back.tsx","state/game-round/operations.ts","components/pages/Game.tsx","state/auth/actions.ts","state/auth/constants.ts","state/auth/operations.ts","components/auth/Login.tsx","components/auth/Register.tsx","components/auth/AuthOptions.tsx","components/layout/Header.tsx","components/auth/private-route.tsx","components/highscore-display.tsx","App.tsx","reportWebVitals.ts","state/game-round/reducers.ts","state/game/reducers.ts","state/auth/reducers.ts","state/highscore/reducers.ts","state/store.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["AppId","AccessToken","GetRandomNumber","max","Math","floor","random","GetRandomLetter","characters","charAt","length","actionCreator","actionCreatorFactory","AddGameRoundAction","ClearGameRoundsAction","SetNBackAction","SetIsRunningAction","AddToSameLetterAction","AddToSameLocationAction","ClearScoreAction","SetIsRunningOperation","isRunning","dispatch","AddToCorrectLocationOperation","amountToAdd","AddToCorrectLetterOperation","AddNewScoreAction","GetHighScoresAction","async","GetHighSCoresOperation","a","nBack","store","getState","gameSettingsReducer","gameSettings","fetch","method","headers","then","response","json","data","highScores","forEach","highscore","time","Date","done","params","undefined","result","AddNewHighScore","game","highScore","score","currentGameScore","correctSameLetter","correctSameLocation","level","scoreToPost","window","localStorage","getItem","body","JSON","stringify","getRoundsLeft","state","gameRoundsReducer","rounds","DualBackGridItem","props","gameList","useSelector","round","roundLetter","Xpossition","x","Ypossition","y","Letter","useState","showLetter","setShowLetter","useEffect","setTimeout","letterViewTimeSeconds","className","DualBackGrid","useDispatch","checkSameLocation","curr","last","checkSameLetter","e","preventDefault","keyDownEventListener","event","key","document","getElementById","addEventListener","removeEventListener","onClick","onContextMenu","gridItems","i","j","push","gridGenerator","DualNBack","numberOfCorrectLocation","numberOfCorrectLetter","clearGame","ClearGameRoundsOperation","postScore","interval","setInterval","msg","SpeechSynthesisUtterance","speechSynthesis","speak","dispach","gameRound","AddGameRoundOperation","secondsBetweenLetters","clearInterval","Slider","defaultValue","min","value","onChange","n","SetNBackOperation","aria-labelledby","valueLabelDisplay","disabled","Button","variant","ClearScoreOperation","color","hidden","Game","SetIsLoggedInAction","SetIsLoggedInOperation","isLoggedIn","Login","history","useHistory","userName","setUserName","userPassword","setUserPassword","username","password","token","setItem","TextField","label","type","target","Register","userConfirmPassword","setUserConfirmPassword","confirmPassword","AuthOptions","isAuthenticated","authReducer","clear","Header","id","to","PrivateRoute","exact","path","component","HighscoreDisplay","highscores","highScoreReducer","getHighScores","TableContainer","Paper","TableHead","TableRow","TableCell","TableBody","sort","b","map","toLocaleDateString","toLocaleTimeString","App","HOST","location","origin","replace","connect","ws","WebSocket","process","REACT_APP_BACKEND_WS_URL","send","onopen","console","log","onmessage","evt","message","parse","onclose","tabIndex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialGameState","initialGameSettings","initialHighScore","reducerArray","action","isType","actions","payload","combineReducers","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","createStore","appState","ReactDOM","render","URL","href","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.7b586723.chunk.js","sourcesContent":["\r\nexport const gameLength: number = 24;\r\nexport const secondsBetweenLetters: number = 3;\r\nexport const letterViewTimeSeconds: number = 1;\r\n\r\n\r\nexport const AppId: string = \"App-Id\";\r\n\r\nexport const AccessToken: string = \"AccessToken\";\r\n","\r\nexport const GetRandomNumber = (max: number) => {\r\n    return Math.floor(Math.random() * max);\r\n}\r\n\r\n\r\nexport const GetRandomLetter = () => {\r\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    return characters.charAt(Math.floor(Math.random() * characters.length));\r\n}","import * as constants from \"./constants\";\r\nimport { GameRound } from \"./types\";\r\nimport actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory(\"GameRoundActions\");\r\n\r\n\r\nexport const AddGameRoundAction = actionCreator<{gameRound: GameRound}>(constants.ADD_GAME_ROUNDS);\r\nexport const ClearGameRoundsAction = actionCreator(constants.CLEAR_GAME_ROUNDS);","\r\n\r\nexport const ADD_GAME_ROUNDS = 'ADD_GAME_ROUNDS';\r\nexport const CLEAR_GAME_ROUNDS = 'CLEAR_GAME_ROUNDS';\r\n","import * as constants from \"./constants\";\r\nimport actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory(\"GameSettingActions\");\r\n\r\n\r\nexport const SetNBackAction = actionCreator<{nBack: number}>(constants.SET_N_BACK);\r\nexport const SetIsRunningAction = actionCreator<{isRunning: boolean}>(constants.SET_IS_RUNNING);\r\nexport const AddToSameLetterAction = actionCreator<{amountToAdd: number}>(constants.ADD_TO_SAME_LETTER);\r\nexport const AddToSameLocationAction = actionCreator<{amountToAdd: number}>(constants.ADD_TO_SAME_LOCATION);\r\nexport const ClearScoreAction = actionCreator(constants.CLEAR_SCORE);","export const SET_N_BACK = 'SET_N_BACK';\r\nexport const SET_IS_RUNNING = 'SET_IS_RUNNING';\r\nexport const ADD_TO_SAME_LETTER = 'ADD_TO_SAME_LETTER';\r\nexport const ADD_TO_SAME_LOCATION = 'ADD_TO_SAME_LOCATION';\r\nexport const CLEAR_SCORE = \"CLEAR_SCORE\";\r\n\r\n","import { Dispatch } from \"redux\";\r\nimport { AddToSameLetterAction, AddToSameLocationAction, ClearScoreAction, SetIsRunningAction, SetNBackAction } from \"./actions\";\r\n\r\nexport const SetNBackOperation = (n: number) => {\r\n    return (dispatch: Dispatch) => dispatch(SetNBackAction({ nBack: n }));\r\n}\r\n\r\nexport const SetIsRunningOperation = (isRunning: boolean) => {\r\n    return (dispatch: Dispatch) => dispatch(SetIsRunningAction({ isRunning }));\r\n}\r\n\r\nexport const AddToCorrectLocationOperation = (amountToAdd: number) => {\r\n    return (dispatch: Dispatch) => dispatch(AddToSameLocationAction({ amountToAdd }));\r\n}\r\n\r\nexport const AddToCorrectLetterOperation = (amountToAdd: number) => {\r\n    return (dispatch: Dispatch) => dispatch(AddToSameLetterAction({ amountToAdd }));\r\n}\r\n\r\nexport const ClearScoreOperation = () => {\r\n    return (dispatch: Dispatch) => dispatch(ClearScoreAction());\r\n}","import * as constants from \"./constants\";\r\nimport actionCreatorFactory from 'typescript-fsa';\r\nimport { highScore } from \"./types\";\r\nconst actionCreator = actionCreatorFactory(\"HighScores\");\r\n\r\n\r\nexport const AddNewScoreAction = actionCreator<{highScore: highScore}>(constants.ADD_NEW_HIGHSCORE);\r\nexport const GetHighScoresAction = actionCreator.async<undefined, {highScores: highScore[]}>(constants.GET_HIGHSCORES);\r\n","export const ADD_NEW_HIGHSCORE = 'ADD_NEW_HIGHSCORE';\r\nexport const GET_HIGHSCORES = 'GET_HIGHSCORES';\r\n\r\n","import { Dispatch } from \"redux\";\r\nimport store from \"../..\";\r\nimport { AccessToken } from \"../../constants\";\r\nimport { AddNewScoreAction, GetHighScoresAction } from \"./actions\";\r\nimport { highScore } from \"./types\";\r\n\r\nexport const GetHighSCoresOperation = async () => {\r\n    const nBack = store.getState().gameSettingsReducer.gameSettings.nBack;\r\n\r\n    const response = await fetch(`/api/highscore?level=${nBack}`, {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    }).then(response => response.json())\r\n        .then(data => data as highScore[])\r\n        .then(highScores => {\r\n            highScores.forEach(highscore => {\r\n                highscore.time = new Date(highscore.time);\r\n            })\r\n            return highScores;\r\n        });\r\n\r\n    return (dispatch: Dispatch) => dispatch(GetHighScoresAction.done({\r\n        params: undefined, result: { highScores: response }\r\n    }));\r\n}\r\n\r\nexport const AddNewHighScoreOperation = (highScore: highScore) => {\r\n    return (dispatch: Dispatch) => dispatch(AddNewScoreAction({ highScore:highScore }));\r\n}\r\n\r\n\r\nexport const AddNewHighScore = async () => {\r\n    const game = store.getState().gameSettingsReducer;\r\n    const highScore: highScore = {\r\n        score: (game.currentGameScore.correctSameLetter + game.currentGameScore.correctSameLocation) * game.gameSettings.nBack,\r\n        level: game.gameSettings.nBack,\r\n        time: new Date(),\r\n    };\r\n\r\n    const scoreToPost = {\r\n        highscore: highScore\r\n    }\r\n\r\n    await fetch(`/api/highscore`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'bearer ' + window.localStorage.getItem(AccessToken),\r\n        },\r\n        body: JSON.stringify(scoreToPost),\r\n    })\r\n}\r\n","import store from \"..\"\r\nimport { gameLength } from \"../constants\"\r\n\r\nexport const getRoundsLeft = (): number => {\r\n    const state = store.getState();\r\n    return gameLength + state.gameSettingsReducer.gameSettings.nBack - state.gameRoundsReducer.rounds.length;\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { letterViewTimeSeconds } from \"../constants\";\r\nimport { GameRound } from \"../state/game-round/types\";\r\nimport { AppState } from \"../state/store\";\r\n\r\ntype Props = {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport const DualBackGridItem = (props: Props) => {\r\n    const gameList: GameRound[] = useSelector((state: AppState) => state.gameRoundsReducer.rounds);\r\n    const round: GameRound = gameList[gameList.length - 1];\r\n\r\n    const roundLetter: string | undefined = (round && round.Xpossition === props.x && round.Ypossition === props.y) ? round.Letter : undefined;\r\n\r\n    const [showLetter, setShowLetter] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (roundLetter) {\r\n            setShowLetter(true);\r\n            setTimeout(() => { setShowLetter(false); }, letterViewTimeSeconds * 1000);\r\n        }\r\n    }, [round, roundLetter])\r\n\r\n    return (\r\n        <div className={\"grid-item \" + ((roundLetter && showLetter) ? \"active-letter\" : \"letter\")}>\r\n            {roundLetter && showLetter &&\r\n                <h1>{roundLetter}</h1>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppId } from \"../constants\";\r\nimport { GameRound } from \"../state/game-round/types\";\r\nimport { AddToCorrectLetterOperation, AddToCorrectLocationOperation } from \"../state/game/operations\";\r\nimport { AppState } from \"../state/store\";\r\nimport { DualBackGridItem } from \"./dual-back-grid-item\"\r\nimport \"./dual-back.scss\";\r\n\r\nexport const DualBackGrid = () => {\r\n    const nBack: number = useSelector((state: AppState) => state.gameSettingsReducer.gameSettings.nBack);\r\n    const isRunning: boolean = useSelector((state: AppState) => state.gameSettingsReducer.gameSettings.isRunning);\r\n    const rounds: GameRound[] = useSelector((state: AppState) => state.gameRoundsReducer.rounds);\r\n    const dispatch = useDispatch();\r\n\r\n    const checkSameLocation = () => {\r\n        if (!isRunning) return;\r\n        if (rounds.length > nBack) {\r\n            const curr: GameRound = rounds[rounds.length - 1];\r\n            const last: GameRound = rounds[rounds.length - (nBack + 1)];\r\n\r\n            if (curr.Xpossition === last.Xpossition && curr.Ypossition === last.Ypossition)\r\n                return AddToCorrectLocationOperation(1)(dispatch);\r\n        }\r\n\r\n        return AddToCorrectLocationOperation(-1)(dispatch);\r\n    }\r\n\r\n    const checkSameLetter = (e: React.MouseEvent<HTMLDivElement, MouseEvent> | KeyboardEvent) => {\r\n        e.preventDefault();\r\n        if (!isRunning) return;\r\n        if (rounds.length > nBack) {\r\n            const curr: string = rounds[rounds.length - 1].Letter;\r\n            const last: string = rounds[rounds.length - (nBack + 1)].Letter;\r\n\r\n            if (curr === last)\r\n                return AddToCorrectLetterOperation(1)(dispatch);\r\n        }\r\n\r\n        return AddToCorrectLetterOperation(-1)(dispatch);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const keyDownEventListener = (event: KeyboardEvent) => {\r\n            //do something on keydown\r\n            if (event.key === 'a') {\r\n                checkSameLocation();\r\n            }\r\n            else if (event.key === 'l') {\r\n                checkSameLetter(event);\r\n            }\r\n        };\r\n\r\n        document.getElementById(AppId)?.addEventListener(\"keydown\", keyDownEventListener);\r\n\r\n        return () => {\r\n            document.getElementById(AppId)?.removeEventListener(\"keydown\", keyDownEventListener);\r\n        }\r\n    }, [isRunning]);\r\n\r\n\r\n    const gridGenerator = (): JSX.Element[] => {\r\n        let gridItems: JSX.Element[] = [];\r\n        for (let i = 0; i < 3; i++) {\r\n            for (let j = 0; j < 3; j++) {\r\n                gridItems.push(<DualBackGridItem x={i} y={j} key={\"grid possition: \" + i + j} />);\r\n            }\r\n        }\r\n        return gridItems;\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className=\"dual-back-grid-container\"\r\n            onClick={checkSameLocation}\r\n            onContextMenu={checkSameLetter}\r\n        >\r\n            {gridGenerator()}\r\n        </div>\r\n    )\r\n}\r\n","import { Button, Slider } from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { secondsBetweenLetters } from '../constants';\r\nimport { AddGameRoundOperation, ClearGameRoundsOperation } from '../state/game-round/operations';\r\nimport { GameRound } from '../state/game-round/types';\r\nimport { ClearScoreOperation, SetIsRunningOperation, SetNBackOperation } from '../state/game/operations';\r\nimport { AddNewHighScore} from '../state/highscore/operations';\r\nimport { AppState } from '../state/store';\r\nimport { getRoundsLeft } from '../utils/rounds';\r\nimport { DualBackGrid } from './dual-back-grid';\r\n\r\n\r\nexport function DualNBack() {\r\n    const dispatch = useDispatch();\r\n    const rounds: GameRound[] = useSelector((state: AppState) => state.gameRoundsReducer.rounds);   //Only here to update EffectHook\r\n    const isRunning: boolean = useSelector((state: AppState) => state.gameSettingsReducer.gameSettings.isRunning);\r\n    const nBack: number = useSelector((state: AppState) => state.gameSettingsReducer.gameSettings.nBack);\r\n    const numberOfCorrectLocation: number = useSelector((state: AppState) => state.gameSettingsReducer.currentGameScore.correctSameLocation);\r\n    const numberOfCorrectLetter: number = useSelector((state: AppState) => state.gameSettingsReducer.currentGameScore.correctSameLetter);\r\n\r\n    const setNBack = (e: React.ChangeEvent<{}>, n: number | number[]) => {\r\n        if (typeof n === \"number\") {\r\n            SetNBackOperation(n)(dispatch);\r\n        }\r\n    }\r\n\r\n    const newGame = () => {\r\n        ClearScoreOperation()(dispatch);\r\n        SetIsRunningOperation(true)(dispatch);\r\n    }\r\n\r\n\r\n    const clearGame = () => {\r\n        SetIsRunningOperation(false)(dispatch);\r\n        ClearGameRoundsOperation()(dispatch);\r\n    }\r\n\r\n    const postScore = async () => {\r\n        (await AddNewHighScore());\r\n    }\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (getRoundsLeft() === 0) {\r\n                postScore();\r\n                clearGame();\r\n            }\r\n            if (isRunning)\r\n                AddGameRoundOperation()(dispatch);\r\n\r\n        }, secondsBetweenLetters * 1000);\r\n\r\n        if (!isRunning)\r\n            clearInterval(interval);\r\n        return () => clearInterval(interval);\r\n    }, [rounds, isRunning]);\r\n\r\n    return (\r\n        <div className=\"center\">\r\n            <h1>Welcome to DualBallzBack</h1>\r\n\r\n            <div className=\"grid-container-3\">\r\n                <div className=\"flex-row\">\r\n                    <p className=\"margin-right-10px\"> Set N-back:</p>\r\n                    <div className=\"width-50px padding-top-5px\">\r\n                        <Slider\r\n                            defaultValue={1}\r\n                            min={1}\r\n                            max={10}\r\n                            value={nBack}\r\n                            onChange={setNBack}\r\n                            aria-labelledby=\"discrete-slider\"\r\n                            valueLabelDisplay=\"auto\"\r\n                            disabled={isRunning}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    onClick={isRunning ? clearGame : newGame}\r\n                    color={isRunning ? \"secondary\" : \"default\"}\r\n                >\r\n                    {isRunning ? \"Stop Game\" : \"New Game\"}\r\n                </Button>\r\n\r\n                <div>\r\n                    <p hidden={!isRunning}>Rounds left: {getRoundsLeft()}</p>\r\n                    <p hidden={isRunning}>Correct by letter: {numberOfCorrectLocation}</p>\r\n                    <p hidden={isRunning}>Correct by location: {numberOfCorrectLetter}</p>\r\n                </div>\r\n            </div>\r\n            <br />\r\n\r\n            <DualBackGrid />\r\n        </div>\r\n    );\r\n}\r\n","import { Dispatch } from \"redux\";\r\nimport { GetRandomLetter, GetRandomNumber } from \"../../utils/random-generator\";\r\nimport { AddGameRoundAction, ClearGameRoundsAction } from \"./actions\";\r\nimport { GameRound } from \"./types\";\r\n\r\n\r\nexport const AddGameRoundOperation = () => {\r\n    const round: GameRound = {\r\n        Xpossition: GetRandomNumber(3),\r\n        Ypossition: GetRandomNumber(3),\r\n        Letter: GetRandomLetter()\r\n    }\r\n    var msg = new SpeechSynthesisUtterance(round.Letter);\r\n    window.speechSynthesis.speak(msg);\r\n    return (dispach: Dispatch) => dispach(AddGameRoundAction({ gameRound: round }));\r\n}\r\n\r\n\r\nexport const ClearGameRoundsOperation = () => {\r\n    return (dispatch: Dispatch) => dispatch(ClearGameRoundsAction());\r\n}","import React from 'react'\r\n\r\nimport { DualNBack } from '../dual-n-back';\r\n\r\nfunction Game() {\r\n    return (\r\n        <>\r\n            <DualNBack />\r\n            <div className=\"flex-center\">\r\n                <p>\r\n                    Press \"a\" or left mouse on same Location\r\n            </p>\r\n                <p>\r\n                    Press \"l\" or right mouse on same letter\r\n            </p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Game\r\n\r\n","import * as constants from \"./constants\";\r\nimport actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory(\"AuthActions\");\r\n\r\nexport const SetIsLoggedInAction = actionCreator<{isLoggedIn: boolean}>(constants.IS_LOGGED_IN);\r\n","export const IS_LOGGED_IN = 'IS_LOGGED_IN';\r\n\r\n\r\n","import { Dispatch } from \"redux\";\r\nimport { SetIsLoggedInAction } from \"./actions\";\r\n\r\nexport const SetIsLoggedInOperation = (isLoggedIn: boolean) => {\r\n    return (dispatch: Dispatch) => dispatch(SetIsLoggedInAction({ isLoggedIn }));\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport { TextField } from '@material-ui/core'\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { SetIsLoggedInOperation } from '../../state/auth/operations';\r\nimport './Login.scss';\r\nimport Button from '@material-ui/core/Button';\r\nimport { AccessToken } from '../../constants';\r\n\r\nfunction Login() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const [userName, setUserName] = useState('');\r\n    const [userPassword, setUserPassword] = useState('');\r\n\r\n    async function handleSubmit(event: any) {\r\n\r\n        await fetch('/api/auth/login', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ username: userName, password: userPassword })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => data.token)\r\n            .then((token: string) => {\r\n                if (token) {\r\n                    localStorage.setItem(AccessToken, token)\r\n                    SetIsLoggedInOperation(true)(dispatch);\r\n                    history.push('/');\r\n                }\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"input-box\">Log In</h1>\r\n            <p className=\"input-box\">Enter username and password:</p>\r\n            <div className=\"input-box\"><TextField color=\"primary\" label=\"User Name\" type='text' value={userName} onChange={(e) => setUserName(e.target.value)} /></div>\r\n            <div className=\"input-box\"><TextField label=\"Password\" type='password' value={userPassword} onChange={(e) => setUserPassword(e.target.value)} />\r\n                <div className=\"login-button\"><Button variant=\"contained\" onClick={handleSubmit}>login</Button></div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { TextField } from '@material-ui/core'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { SetIsLoggedInOperation } from '../../state/auth/operations';\r\nimport './Login.scss';\r\nimport Button from '@material-ui/core/Button';\r\nimport { AccessToken } from '../../constants';\r\n\r\nfunction Register() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const [userName, setUserName] = useState('');\r\n    const [userPassword, setUserPassword] = useState('');\r\n    const [userConfirmPassword, setUserConfirmPassword] = useState('');\r\n\r\n    async function handleSubmit(event: any) {\r\n\r\n        await fetch('/api/auth/registration', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ username: userName, password: userPassword, confirmPassword: userConfirmPassword })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => data.token)\r\n            .then((token: string) => {\r\n                if (token) {\r\n                    localStorage.setItem(AccessToken, token)\r\n                    SetIsLoggedInOperation(true)(dispatch);\r\n                    history.push('/');\r\n                }\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"input-box\">Register</h1>\r\n            <p className=\"input-box\">Enter username and password:</p>\r\n            <div className=\"input-box\"><TextField label=\"User Name\" type='text' value={userName} onChange={(e) => setUserName(e.target.value)} /></div>\r\n            <div className=\"input-box\"><TextField label=\"Password\" type='password' value={userPassword} onChange={(e) => setUserPassword(e.target.value)} /></div>\r\n            <div className=\"input-box\"><TextField label=\"Confirm Password\" type='password' value={userConfirmPassword} onChange={(e) => setUserConfirmPassword(e.target.value)} /></div>\r\n            <div className=\"login-button\"><Button variant=\"contained\" onClick={handleSubmit}>Submit</Button></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { SetIsLoggedInOperation } from '../../state/auth/operations';\r\nimport { AppState } from '../../state/store';\r\n\r\nfunction AuthOptions() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const isAuthenticated = useSelector((state: AppState) => state.authReducer.isLoggedIn)\r\n\r\n    const logout = () => {\r\n        SetIsLoggedInOperation(false)(dispatch);\r\n        window.localStorage.clear();\r\n    }\r\n\r\n    // Use history to change url\r\n    const history = useHistory();\r\n    const register = () => history.push(\"/register\");\r\n    const login = () => history.push(\"/login\");\r\n\r\n    return (\r\n        <nav className=\"auth-options\">\r\n            {isAuthenticated ? (\r\n                <button onClick={logout}>Log Out</button>\r\n            ) : (\r\n                    <>\r\n                        <button onClick={register}>Register</button>\r\n                        <button onClick={login}>Log in</button>\r\n                    </>\r\n                )}\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default AuthOptions\r\n\r\n","import React from 'react'\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport AuthOptions from '../auth/AuthOptions'\r\n\r\nfunction Header() {\r\n    const history = useHistory();\r\n    return (\r\n        <header id=\"header\">\r\n            <Link to=\"/\">\r\n                <h1 className=\"title\">Dual-Ballz-Back</h1>\r\n            </Link>\r\n            <nav className=\"auth-options\">\r\n                <button onClick={() => history.push('/highscore')}>Highscores</button>\r\n            </nav>\r\n            <AuthOptions />\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nexport default Header\r\n\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState } from '../../state/store';\r\n\r\nimport { RouteProps, Route } from \"react-router-dom\";\r\nimport Login from './Login';\r\n\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nfunction PrivateRoute(props: RouteProps){\r\n    const isLoggedIn =  useSelector((state: AppState) => state.authReducer.isLoggedIn)  \r\n\r\n    const history = useHistory();\r\n\r\n    if (!isLoggedIn)\r\n        history.push('/login')\r\n    \r\n    return (\r\n        <div>\r\n            {\r\n                props.exact ?\r\n                    <Route exact={true} path={props.path} component={props.component} /> \r\n                    :\r\n                    <Route exact={false} path={props.path} component={props.component} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PrivateRoute;","import {\r\n    Paper,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector} from \"react-redux\";\r\nimport { GetHighSCoresOperation } from \"../state/highscore/operations\";\r\nimport { AppState } from \"../state/store\";\r\nimport './highscore-display.scss';\r\n\r\n\r\nexport function HighscoreDisplay() {\r\n    const dispatch = useDispatch();\r\n\r\n    const highscores = useSelector((state: AppState) => state.highScoreReducer.highScores);\r\n\r\n    const getHighScores = async () => {\r\n        (await GetHighSCoresOperation())(dispatch);\r\n    }\r\n    useEffect(() => {\r\n        getHighScores();\r\n    }, [])\r\n    const nBack: number = useSelector((state: AppState) => state.gameSettingsReducer.gameSettings.nBack);\r\n\r\n    return (\r\n        <div className=\"tableContainer\">\r\n            <h2>Here you can see the highscores of other users, on the same level as you ({nBack})</h2>\r\n            <TableContainer component={Paper} className=\"tableContainer\">\r\n                <table className=\"table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className=\"item\">Level</TableCell>\r\n                            <TableCell className=\"item\">Score</TableCell>\r\n                            <TableCell className=\"item\">Time</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {highscores.sort((a, b) => (a.score > b.score) ? -1 : 1).map((highscore) => (\r\n                            <TableRow key={\"TableRowHighSCore: \" + JSON.stringify(highscore)}>\r\n                                <TableCell className=\"item\">{highscore.level}</TableCell>\r\n                                <TableCell className=\"item\">{highscore.score}</TableCell>\r\n                                <TableCell className=\"item\">{highscore.time.toLocaleDateString() + \" \" + highscore.time.toLocaleTimeString()}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </table>\r\n            </TableContainer>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport './style/style.css';\r\nimport \"./App.scss\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Game from './components/pages/Game'\r\nimport Login from './components/auth/Login'\r\nimport Register from './components/auth/Register'\r\nimport Header from './components/layout/Header'\r\nimport PrivateRoute from './components/auth/private-route';\r\nimport { HighscoreDisplay } from \"./components/highscore-display\";\r\nimport { AddNewHighScoreOperation } from './state/highscore/operations';\r\nimport { highScore } from './state/highscore/types';\r\nimport { AppId } from './constants';\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport default function App() {\r\n  let HOST = window.location.origin.replace(/^http/, 'ws')\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const connect = () => {\r\n    const ws = new WebSocket(process.env.REACT_APP_BACKEND_WS_URL || HOST);\r\n    let interval = setInterval(function(){ws.send(\"ping\")}, 50e3);\r\n    ws.onopen = () => {\r\n      // on connecting, do nothing but log it to the console\r\n      console.log('connected')\r\n    }\r\n\r\n    ws.onmessage = evt => {\r\n      // listen to data sent from the websocket server\r\n      const message = JSON.parse(evt.data)\r\n      console.log(\"Message: \", message)\r\n\r\n      if (message.level && message.time && message.score) {\r\n        const highscore: highScore = {level: message.level, score: message.score, time: new Date(message.time)};\r\n        console.log(\"Highscore: \", highscore)\r\n        AddNewHighScoreOperation(highscore)(dispatch);\r\n      }\r\n    }\r\n\r\n    ws.onclose = () => {\r\n      console.log('Disconnected. Trying to reconnect...')\r\n      // automatically try to reconnect on connection loss\r\n      connect();\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    connect();\r\n  });\r\n\r\n  return (\r\n    <div className=\"App\" id={AppId} tabIndex={-1}>\r\n      <BrowserRouter>\r\n        <Header />\r\n        <Switch>\r\n          <PrivateRoute exact path=\"/\" component={Game} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/highscore\" component={HighscoreDisplay} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import * as actions from \"./actions\";\r\nimport { Action } from \"redux\";\r\nimport { isType } from 'typescript-fsa';\r\nimport { GameRounds } from \"./types\";\r\n\r\n\r\nexport const initialGameState: GameRounds = {\r\n    rounds: [],\r\n};\r\n\r\n\r\nexport function gameRoundsReducer(state: typeof initialGameState = initialGameState, action: Action): typeof initialGameState {\r\n    if (isType(action, actions.AddGameRoundAction)) {\r\n        return {\r\n            ...state, rounds: [...state.rounds, action.payload.gameRound]\r\n        }\r\n    }\r\n\r\n    if (isType(action, actions.ClearGameRoundsAction)) {\r\n        return {\r\n            ...state, rounds: []\r\n        }\r\n    }\r\n\r\n\r\n    return state;\r\n}","import * as actions from \"./actions\";\r\nimport { Action } from \"redux\";\r\nimport { isType } from 'typescript-fsa';\r\nimport { Game } from \"./types\";\r\n\r\nexport const initialGameSettings: Game = {\r\n    gameSettings: {\r\n        nBack: 1,\r\n        isRunning: false,\r\n    },\r\n    currentGameScore: {\r\n        correctSameLocation: 0,\r\n        correctSameLetter: 0,\r\n    },\r\n\r\n};\r\n\r\n\r\nexport function gameSettingsReducer(state: typeof initialGameSettings = initialGameSettings, action: Action): typeof initialGameSettings {\r\n    if (isType(action, actions.SetNBackAction)) {\r\n        return {\r\n            ...state, gameSettings: {\r\n                ...state.gameSettings, nBack: action.payload.nBack\r\n            }\r\n        }\r\n    }\r\n\r\n    if (isType(action, actions.SetIsRunningAction)) {\r\n        return {\r\n            ...state, gameSettings: {\r\n                ...state.gameSettings, isRunning: action.payload.isRunning\r\n            }\r\n        }\r\n    }\r\n\r\n    if (isType(action, actions.AddToSameLetterAction)) {\r\n        return {\r\n            ...state, currentGameScore: {\r\n                ...state.currentGameScore, correctSameLetter: state.currentGameScore.correctSameLetter + action.payload.amountToAdd\r\n            }\r\n        }\r\n    }\r\n\r\n    if (isType(action, actions.AddToSameLocationAction)) {\r\n        return {\r\n            ...state, currentGameScore: {\r\n                ...state.currentGameScore, correctSameLocation: state.currentGameScore.correctSameLocation + action.payload.amountToAdd\r\n            }\r\n        }\r\n    }\r\n\r\n    if (isType(action, actions.ClearScoreAction)) {\r\n        return {\r\n            ...state, currentGameScore: {\r\n                ...state.currentGameScore,\r\n                correctSameLocation: 0,\r\n                correctSameLetter: 0\r\n            }\r\n        }\r\n    }\r\n\r\n    return state;\r\n}","import * as actions from \"./actions\";\r\nimport { Action } from \"redux\";\r\nimport { isType } from 'typescript-fsa';\r\nimport { authReducerContext } from \"./types\";\r\n\r\n\r\nexport const isLoggedIn: authReducerContext = {\r\n    isLoggedIn: false,\r\n};\r\n\r\n\r\nexport function authReducer(state: typeof isLoggedIn = isLoggedIn, action: Action): typeof isLoggedIn {\r\n    if (isType(action, actions.SetIsLoggedInAction)) {\r\n        return {\r\n            ...state, isLoggedIn: action.payload.isLoggedIn\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return state;\r\n}","import * as actions from \"./actions\";\r\nimport { Action } from \"redux\";\r\nimport { isType } from 'typescript-fsa';\r\nimport { highScoreReducerContent } from \"./types\";\r\n\r\n\r\nexport const initialHighScore: highScoreReducerContent = {\r\n    highScores: []\r\n};\r\n\r\n\r\nexport function highScoreReducer(state: typeof initialHighScore = initialHighScore, action: Action): typeof initialHighScore {\r\n    if (isType(action, actions.AddNewScoreAction)) {\r\n        return {\r\n            ...state, highScores: [...state.highScores, action.payload.highScore]\r\n        }\r\n    }\r\n\r\n    if (isType(action, actions.GetHighScoresAction.done)) {\r\n        return {\r\n            ...state, highScores: action.payload.result.highScores\r\n        }\r\n    }\r\n\r\n    return state;\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { gameRoundsReducer } from './game-round/reducers';\r\nimport { gameSettingsReducer } from './game/reducers';\r\nimport { authReducer } from './auth/reducers';\r\nimport { highScoreReducer } from './highscore/reducers';\r\n\r\nconst reducerArray = {\r\n    gameRoundsReducer,\r\n    gameSettingsReducer,\r\n    authReducer,\r\n    highScoreReducer,\r\n}\r\n\r\nconst store = combineReducers({\r\n    ...reducerArray\r\n})\r\n\r\nexport type coreAppState = {\r\n    [K in keyof typeof reducerArray]: ReturnType<typeof reducerArray[K]>;\r\n}\r\n\r\nexport type AppState = coreAppState;\r\n\r\nexport default store;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if ('serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister().then((s) => console.log('Service-Worker is now unregistered'));\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport appState from \"./state/store\";\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\nconst store = createStore(appState);\r\nexport default store;\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root') as HTMLElement\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}